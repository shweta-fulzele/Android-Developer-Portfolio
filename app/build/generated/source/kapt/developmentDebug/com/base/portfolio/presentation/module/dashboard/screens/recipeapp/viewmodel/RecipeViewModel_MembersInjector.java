// Generated by Dagger (https://dagger.dev).
package com.base.portfolio.presentation.module.dashboard.screens.recipeapp.viewmodel;

import com.base.portfolio.presentation.module.dashboard.screens.recipeapp.repository.RecipeRepositoryImpl;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RecipeViewModel_MembersInjector implements MembersInjector<RecipeViewModel> {
  private final Provider<RecipeRepositoryImpl> recipeRepositoryProvider;

  public RecipeViewModel_MembersInjector(Provider<RecipeRepositoryImpl> recipeRepositoryProvider) {
    this.recipeRepositoryProvider = recipeRepositoryProvider;
  }

  public static MembersInjector<RecipeViewModel> create(
      Provider<RecipeRepositoryImpl> recipeRepositoryProvider) {
    return new RecipeViewModel_MembersInjector(recipeRepositoryProvider);
  }

  @Override
  public void injectMembers(RecipeViewModel instance) {
    injectRecipeRepository(instance, recipeRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.base.portfolio.presentation.module.dashboard.screens.recipeapp.viewmodel.RecipeViewModel.recipeRepository")
  public static void injectRecipeRepository(RecipeViewModel instance,
      RecipeRepositoryImpl recipeRepository) {
    instance.recipeRepository = recipeRepository;
  }
}
